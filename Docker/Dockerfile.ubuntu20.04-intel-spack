FROM noaaepic/ubuntu20.04-base-intel:latest
WORKDIR /opt/spack-stack

ARG env_name=develop

RUN mkdir -p /opt/spack-stack/configs/sites/ubuntu-intel && \
    cp /root/.spack/linux/compilers.yaml /opt/spack-stack/configs/sites/ubuntu-intel && ls -l /opt/spack-stack/configs/sites/ubuntu-intel && \
    find /opt/spack-stack/spack/opt/spack/ -iname intel-oneapi-mpi* && \
    loc=`find /opt/spack-stack/spack/opt/spack/ -iname intel-oneapi-mpi* | head -n 1` && \
    echo $loc && \
    echo "config:" > /opt/spack-stack/configs/sites/ubuntu-intel/config.yaml && \
    echo "  build_jobs: 8" >> /opt/spack-stack/configs/sites/ubuntu-intel/config.yaml && \
    echo "modules:" > /opt/spack-stack/configs/sites/ubuntu-intel/modules.yaml && \
    echo "  default:" >> /opt/spack-stack/configs/sites/ubuntu-intel/modules.yaml && \
    echo "    enable::" >> /opt/spack-stack/configs/sites/ubuntu-intel/modules.yaml && \
    echo "    - lmod" >> /opt/spack-stack/configs/sites/ubuntu-intel/modules.yaml && \
    echo "packages:" > /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml && \
    echo "  all:" >> /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml && \
    echo "    compiler:: [intel@2021.6.0]" >> /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml && \
    echo "    providers:" >> /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml && \
    echo "      mpi:: [intel-oneapi-mpi@2021.6.0]" >> /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml && \
    echo "  mpi:" >> /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml && \
    echo "    buildable: False" >> /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml && \
    echo "  intel-oneapi-mpi:" >> /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml && \
    echo "    externals:" >> /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml && \
    echo "    - spec: intel-oneapi-mpi@2021.6.0" >> /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml && \
    echo "      modules:" >> /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml && \
    echo "      - impi/2021.6.0" >> /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml && \
    echo "      prefix: $loc" >> /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml
RUN git clone -b $env_name https://github.com/ufs-community/ufs-srweather-app.git 
COPY gen-specs.sh /opt/spack-stack
RUN . ./setup.sh && spack stack create env --site ubuntu-intel --template empty --name $env_name && \
    echo $env_name && \
    sed -i 's/\[\]//g' envs/$env_name/spack.yaml && \
#   cat gsi.specs >> envs/$env_name/spack.yaml && \
    chmod +x ./gen-specs.sh && ./gen-specs.sh $env_name && \
    spack env activate envs/$env_name && \ 
    spack add curl@7.49.1 && \
    spack concretize && \ 
    spack install
ENV SHELL=/bin/bash
RUN . ./setup.sh && spack env activate envs/$env_name && \ 
    spack add ecmwf-atlas@0.27.0~trans gsl-lite boost@1.72.0 eckit fckit udunits intel-mkl parallelio~shared && \
    spack install
RUN . ./setup.sh && spack env activate envs/$env_name && \ 
    spack add ecbuild intel-mkl && spack install
RUN . ./setup.sh && source /usr/share/lmod/lmod/init/bash && \
    spack env activate envs/$env_name && \ 
    ln -s /usr/bin/python3 /usr/bin/python && \
    spack stack setup-meta-modules && \
    spack module lmod refresh -y && \
    module use /opt/spack-stack/envs/$env_name/install/modulefiles/Core && \
    module avail && \
    ls -l /opt/spack-stack/envs/$env_name/install/modulefiles/Core && \
    sed -i 's/impi/intel-oneapi-mpi/g' /opt/spack-stack/envs/$env_name/install/modulefiles/intel/2021.6.0/stack-intel-oneapi-mpi/2021.6.0.lua && \
    find /opt/spack-stack/envs/$env_name/install/modulefiles -iname "*.lua" | xargs grep -l depends_on | xargs sed -i 's/depends_on/-- depends_on/g' && \
    echo "module use /opt/spack-stack/envs/$env_name/install/modulefiles/Core" >> /root/.bashenv && \
    echo "module load stack-intel stack-intel-oneapi-mpi" >> /root/.bashenv && \
    source /root/.bashenv && \
    module spider >& mods && grep ": " mods | awk -F ":" '{print "module load " $2}' | grep -v intel >> /root/.bashenv && \
    echo "[[ -s ~/.bashenv ]] && source ~/.bashenv" >> /root/.bash_profile && \
    echo "[[ -s ~/.bashenv ]] && source ~/.bashenv" >> /root/.bashrc && \
    echo "DONE"
RUN source /root/.bashenv && module list && echo "env PATH=/opt/ufs-srweather-app/container-bin:$PATH" > locenvs && \
    echo "ENV LD_LIBRARY_PATH=/opt/ufs-srweather-app/lib:$LD_LIBRARY_PATH" >> locenvs && \
    echo "ENV MODULEPATH=$MODULEPATH" >> locenvs && \
    echo "ENV FI_PROVIDER_PATH=$FI_PROVIDER_PATH" >> locenvs && \
    echo "ENV LMOD_DEFAULT_MODULEPATH=$LMOD_DEFAULT_MODULEPATH" >> locenvs && \
    echo "ENV LMOD_PKG=$LMOD_PKG" >> locenvs && \
    echo "ENV LMOD_CMD=$LMOD_CMD" >> locenvs && \
    echo "ENV LMOD_DIR=$LMOD_DIR" >> locenvs && \
    echo "ENV MODULESHOME=$MODULESHOME" >> locenvs && \
    cp ~/.bashenv /opt/spack-stack
WORKDIR /opt
RUN git clone -b feature/soca https://github.com/jcsda/ufs-bundle.git
WORKDIR /opt/ufs-bundle
#RUN mkdir build && cd build && export PIO_ROOT=$parallelio_ROOT && . ~/.bashenv &&\
#    ecbuild -DBUILD_TESTING=TRUE -DCMAKE_C_COMPILER=mpiicc -DCMAKE_CXX_COMPILER=mpiicpc -DCMAKE_Fortran_COMPILER=mpiifort -DMPI_CXX_LINK_FLAGS:STRING="-Wl,--copy-dt-needed-entries" -DCMAKE_BUILD_TYPE=DEBUG -DUFS_APP=NG-GODAS .. && make -j 8
